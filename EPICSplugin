#!/usr/bin/python2.7
import sys
import epics
import time

cerr = sys.stderr
cout = sys.stdout


def onConnectionChange(pvname=None, conn= None, **kws):
    cerr.write('PV connection status changed: %s %s\n' % (pvname,  repr(conn)))
    cerr.flush()

class Plot:
    """netdata plot comprised of several EPICS PVs"""
    title = ""
    name= ""
    type = "EPICS"
    pvs = {}
    
    def __init__(self, Name,Title="EPICS Plot"):
        self.title = Title
        self.name = Name
        
    def add(self,PVName, Precision):
        pv = epics.PV(PVName, auto_monitor=True,  connection_callback= onConnectionChange)
        self.pvs[PVName] = [pv,  Precision]
    
    def CreatePlot(self):
        cout.write("CHART '%s.%s' '%s' '%s'\n" % (self.type, self.name, self.name, self.title))
        for name, pv in self.pvs.iteritems():
            cout.write("DIMENSION '%s' '' absolute 1 %d\n" % (name,  pv[1]))

    def Update(self):
        cout.write("BEGIN '%s.%s'\n" % (self.type, self.name))
        for name, pv in self.pvs.iteritems():
            if pv[0].connected ==1:
                cout.write("SET '%s' = %d\n" % (name, pv[0].value * pv[1]))
        cout.write("END\n")


def main():
    p = Plot("Plot1")
    p.add("Kitchen:Temperature", 1000)
    p.add("LivingRoom:Temperature", 100)
    p.CreatePlot()
    cout.flush()
    while(True):
        p.Update()
        cout.flush()
        time.sleep(1)


if __name__ == "__main__":
    main()
